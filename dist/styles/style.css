/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}*,:after,:before{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box}html{font-size:1em;-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-font-smoothing:antialiased;height:100%}body{background-size:100%;font-family:Archivo,sans-serif,Helvetica Neue,Helvetica,Arial,Lucida Grande;font-weight:400;line-height:1.875;color:#0c0c0c;background-color:#fff;overflow-x:hidden}button,input,select,textarea{font-family:inherit;font-size:inherit;line-height:inherit}a{color:#0c0c0c;transition:all .2s ease}a,a:focus,a:hover{text-decoration:none}a:focus,a:hover{color:#000}a:focus{outline:thin dotted;outline:5px auto -webkit-focus-ring-color;outline-offset:-2px}figure{margin:0}img{max-width:100%}hr{margin-top:30px;margin-bottom:30px;border:0;border-top:1px solid #848484}.container,.site-header{max-width:1190px;max-width:74.375rem;margin:0 auto;position:relative;padding:0 15px}@media only screen and (min-width:41rem){.container,.site-header{padding:0 5px}}.flexgrid{box-sizing:border-box;display:-ms-flexbox;display:-webkit-flex;display:flex;flex-direction:row;flex-wrap:wrap;flex:0 1 auto;list-style:none;margin:0 0 0 -.625rem;padding:0;width:100%}.flexgrid--center{justify-content:center}.flexgrid--full{margin-left:0}.flexgrid--full>.flexgrid__item{padding-left:0}.xsmall--col-12{box-sizing:border-box;flex-basis:100%;max-width:100%;padding-left:.625rem}@media only screen and (min-width:41rem){.small--col-12{box-sizing:border-box;flex-basis:100%;max-width:100%;padding-left:.625rem}}@media only screen and (min-width:65rem){.medium--col-5{flex-basis:41.66667%;max-width:41.66667%}.medium--col-5,.medium--col-7{box-sizing:border-box;padding-left:.625rem}.medium--col-7{flex-basis:58.33333%;max-width:58.33333%}.medium--col-10{box-sizing:border-box;flex-basis:83.33333%;max-width:83.33333%;padding-left:.625rem}}.entry-footer,.entry-title,.site-info{display:none}.reserva__wrapper{text-align:center}.reserva__wrapper .reserva__cta{float:none}.reserva__cta{background-color:#fff;border:.125rem solid #000;display:inline-block;font-family:Archivo Black;font-size:1.16938rem;letter-spacing:.00875rem;line-height:1;margin-right:1.4375rem;padding:.5625rem 1.5rem;text-transform:uppercase}.reserva__cta:after{content:"";background-image:url(https://2020.colombia.wordcamp.org/files/2020/07/arrow-circle@2x.png);background-repeat:no-repeat;background-size:contain;display:inline-block;height:1.6875rem;margin-left:2rem;vertical-align:middle;width:1.6875rem}.site-header{align-items:center;display:flex;justify-content:space-between;margin-top:2.0625rem;padding-bottom:1.125rem;padding-top:.875rem}@media only screen and (min-width:65rem){.site-header{padding-bottom:.625rem;padding-top:.375rem}}.custom-logo{max-width:8.75rem;height:auto}@media only screen and (min-width:65rem){.custom-logo{max-width:17.5625rem}}.top-bar{background-color:#faf071;font-size:0;left:0;padding:.625rem 0;position:absolute;right:0;text-align:center;top:0;width:100%}.top-bar__link{font-family:Archivo Black;font-size:.8125rem;letter-spacing:.00937rem;line-height:1}.menu{padding:0;list-style:none}.menu-item{font-family:Archivo Black;font-size:18px;color:#0f100e;letter-spacing:-.01px;display:inline-block;margin-left:1.875rem}.menu-toggle{display:inline-block;padding:.3125rem .625rem;background:transparent url(https://www.wpbq.org/wcco/hamburger.svg) no-repeat 50%;background-size:1.625rem 1.0625rem;text-indent:-999em;border:none}@media only screen and (min-width:65rem){.menu-toggle{display:none}}.toggled-on .menu-toggle{background:transparent url(https://www.wpbq.org/wcco/cross.svg) no-repeat 50%;background-size:18px 18px}.current-menu-item a:after{content:"";height:.1875rem;background-color:#faf071;width:100%;display:block}@media only screen and (min-width:65rem){.button--box{background-color:#fff56c;border:1px solid #000;box-shadow:1px 0 0 #000,0 -1px 0 #000,2px -1px 0 #000,1px -2px 0 #000,3px -2px 0 #000,2px -3px 0 #000,4px -3px 0 #000,3px -4px 0 #000,5px -4px 0 #000,4px -5px 0 #000,6px -5px 0 #000,5px -6px 0 #000,7px -6px 0 #000,6px -7px 0 #000,8px -7px 0 #000,7px -8px 0 #000,9px -8px 0 #000,8px -8px 0 #000;font-size:.875rem;letter-spacing:.00625rem;font-family:Archivo Black;padding:.375rem 1rem;text-decoration:none;text-transform:uppercase;transition:margin-bottom .3s ease,margin-left .3s ease,box-shadow .3s ease}}@media only screen and (max-width:63rem){.main-navigation .menu-main-menu-container{display:none}}.main-banner{background:url(https://2020.colombia.wordcamp.org/files/2020/07/main-banner-bg@2x.png) #0f100e;background-size:contain;background-position:0 0;overflow:hidden;padding-top:2.1875rem;padding-bottom:2.1875rem}@media only screen and (min-width:65rem){.main-banner{padding-top:7.6875rem;padding-bottom:2.1875rem}}.main-banner__left,.main-banner__right{position:relative;height:100%}.main-banner__title{font-family:Archivo Black;font-size:2.625rem;line-height:1;margin-bottom:1.8125rem;margin-top:0}@media only screen and (min-width:65rem){.main-banner__title{font-size:5.25rem;margin-bottom:6.1875rem}}.main-banner__title--white{font-size:1.6875rem;color:#fff;display:block}.main-banner__title--white.last{text-align:right}.main-banner__title--yellow{color:#faf071}.main-banner__title--pink{color:#ff6c6c}.main-banner .reserva__cta{float:right;margin-bottom:1.25rem}@media only screen and (min-width:65rem){.main-banner .reserva__cta{margin-bottom:0}}.main-banner__date{color:#fff;font-size:1rem;font-weight:600;letter-spacing:.00625rem;line-height:1.5rem;text-align:center}@media only screen and (min-width:65rem){.main-banner__date{font-size:1.375rem;left:7.75rem;max-width:7.875rem;position:absolute;top:5.125rem}}.main-banner .asteroid__image{position:absolute;right:-9.375rem;top:-3.75rem;z-index:2}@media only screen and (max-width:63rem){.main-banner .asteroid__image{display:none}}.main-banner .luna__image{bottom:1.875rem;left:2.5rem;position:absolute;z-index:2}@media only screen and (max-width:63rem){.main-banner .luna__image{display:none}}.main-banner .rock__image{position:absolute;right:0;bottom:0;animation:float-zoom 100s infinite;-webkit-animation:float-zoom 100s infinite}.main-banner .astronaut{position:absolute;left:2.6875rem;top:-2.5rem;animation:float 20s infinite;-webkit-animation:float 20s infinite;z-index:2}@media only screen and (max-width:63rem){.main-banner .astronaut{display:none}}.main-banner .astronaut__image{max-width:23.25rem}@keyframes float{0%,to{transform:translate(20px,25px)}50%{transform:translate(50px,50px)}}@-webkit-keyframes float{0%,to{transform:translate(20px,25px)}50%{transform:translate(50px,50px)}}@keyframes float-zoom{0%,to{transform:translate(20px,25px) scale(.1) rotate(0)}50%{transform:translate(0) scale(.9) rotate(1turn)}}@-webkit-keyframes float-zoom{0%,to{transform:translate(20px,25px) scale(.1) rotate(0)}50%{transform:translate(0) scale(.9) rotate(1turn)}}.view{position:absolute;top:0;left:0;right:0;bottom:0;perspective:400}.plane{width:26px;height:26px;transform-style:preserve-3d}@media only screen and (max-width:63rem){.plane{display:none}}.plane.main{position:absolute;top:0;left:0;right:0;margin:auto;transform:rotateX(60deg) rotate(-30deg);animation:rotate 100s linear infinite;-webkit-animation:rotate 100s linear infinite;z-index:1}.plane.main .circle{width:26px;height:26px;position:absolute;transform-style:preserve-3d;border-radius:100%;box-sizing:border-box;box-shadow:0 0 60px #faf071,inset 0 0 60px #faf071}.plane.main .circle:after,.plane.main .circle:before{content:"";display:block;position:absolute;top:0;left:0;right:0;margin:auto;width:13%;height:13%;border-radius:100%;background:#353220;box-sizing:border-box;box-shadow:0 0 60px 2px #5c5843}.plane.main .circle:before{transform:translateZ(-500px)}.plane.main .circle:after{transform:translateZ(500px)}.plane.main .circle:first-child{transform:rotate(72deg) rotateX(63.435deg)}.plane.main .circle:nth-child(2){transform:rotate(144deg) rotateX(63.435deg)}.plane.main .circle:nth-child(3){transform:rotate(216deg) rotateX(63.435deg)}.plane.main .circle:nth-child(4){transform:rotate(288deg) rotateX(63.435deg)}.plane.main .circle:nth-child(5){transform:rotate(1turn) rotateX(63.435deg)}@keyframes rotate{0%{transform:rotateX(0) rotateY(0) rotate(0)}to{transform:rotateX(1turn) rotateY(1turn) rotate(1turn)}}.introduction{padding-top:1.875rem;padding-bottom:1.875rem;position:relative}@media only screen and (min-width:65rem){.introduction{padding-top:3.75rem;padding-bottom:0}}.introduction__title{font-family:Archivo Black;font-size:2.25rem;line-height:1;margin-bottom:.9375rem;margin-top:0;text-align:center}@media only screen and (min-width:65rem){.introduction__title{font-size:3.5rem}}.introduction__subtitle{color:#848484;font-size:1.25rem;font-weight:600;line-height:1;margin-bottom:1.625rem;margin-top:0;text-align:center}@media only screen and (min-width:65rem){.introduction__subtitle{font-size:2rem;margin-bottom:3.5rem}}.introduction .reserva__wrapper{padding-top:1.25rem;text-align:center;z-index:1}@media only screen and (min-width:65rem){.introduction .reserva__wrapper{bottom:-20px;padding-top:0;position:relative}}@media only screen and (max-width:63rem){.introduction .reserva__cta{margin-right:0}}.boxes{column-gap:1.25rem;display:grid;grid-template-columns:1fr;margin:0;row-gap:1.25rem}@media only screen and (min-width:65rem){.boxes{grid-template-columns:1fr 1fr 1fr;padding:0 2.1875rem;position:relative;bottom:-3.1875rem;margin-top:-3.1875rem}}.boxes .box{background-color:#0c0c0c;text-align:center;padding-top:6.25rem;position:relative}@media only screen and (min-width:65rem){.boxes .box.first,.boxes .box.last{margin-top:3.75rem;min-height:22.75rem}}.boxes .box__ribbon{left:.75rem;position:absolute;top:.9375rem;width:100%;z-index:1}.boxes .box__link{background-color:#faf071;border:.125rem solid #000;display:block;font-family:Archivo Black;font-size:1.375rem;line-height:1;padding:.9375rem}.boxes .box__link-icon{margin-left:1.875rem;vertical-align:middle}.boxes .box__image{position:relative}@media only screen and (min-width:65rem){.boxes .box__image{bottom:2.5rem;left:0;margin:auto;position:absolute;right:0;z-index:1}}.earth__container{bottom:-1.5625rem;position:absolute;width:100%}@media only screen and (max-width:63rem){.earth__container{display:none}}.earth__image{display:block;margin:0 auto}.hidden{display:none}.site-description,.site-title,.sr-only{position:absolute;width:1px;height:1px;margin:-1px;padding:0;overflow:hidden;clip:rect(0,0,0,0);border:0}.color--pink{color:#ff6c6c}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/